package lesson022;

import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import java.util.stream.Collectors;

public class StreamAPIOrnek2 {

	public static void main(String[] args) {

		List<User> users = new ArrayList<>();
		users.add(new User("ahmet", 1));
		users.add(new User("ayse", 2));
		users.add(new User("caner", 3));
		users.add(new User("beste", 4));
		users.add(new User("hayal", 5));

		// bütün user'ların toString metodunu çağıralım

		users.stream().forEach(user -> user.toString());// böyle olunca yazdırmaz
										// çünkü toString String bir değer dönüyor
		users.forEach(user -> System.out.println(user.toString()));

		// ID'si 3'ten büyük olanları bir listeye atalım
		// ve bu liste içindeki userların bilgileri goster metodunu yazdıralım
		
		System.out.println("- - - - - - - - - - \n");
		List<User> uctenBuyuk = users.stream().filter(user -> user.getId() > 3).toList();
		uctenBuyuk.forEach(user -> user.bilgileriGoster());
		System.out.println("- - - - - - - - - - \n");
		uctenBuyuk.forEach(User::bilgileriGoster);
				
		// StreamAPI
		
		// ID'si 3'ten küçük olanları bir Set'e atalım
		System.out.println("- - - - - - - - - - \n");
		Set<User> uctenKucukler = users.stream()	// Stream<User>
				.filter(user -> user.getId() < 3)	// Stream<User> ID'si 3ten küçük userlar
				.collect(Collectors.toSet());		// Set<User> ID'si 3ten küçük userlar
		uctenKucukler.forEach(User::bilgileriGoster);
		
		// ismi Ahmet olanları listeye atalım
		System.out.println("- - - - - - - - - - \n");
		List<User> ahmetler = users.stream()
				.filter(user -> user.getName().equalsIgnoreCase("ahmet"))
				.toList();
		ahmetler.forEach(User::bilgileriGoster);
		
	}
}
